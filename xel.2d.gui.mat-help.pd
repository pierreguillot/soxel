#N struct 1228-stuct-matrix float x1 float y1 float x2 float y2 float
xv float yv float c1 float c2 float val float index;
#N canvas 281 37 603 578 10;
#X obj 5 7 xel.header xel.2d.gui.mat;
#X obj 6 504 xel.footer;
#N canvas 0 22 1029 742 \$0-canvas 0;
#X scalar 1228-stuct-matrix -1 1 -0.6 0.6 -0.9 0.8 999 0 0 0 \;;
#X scalar 1228-stuct-matrix -0.6 1 -0.2 0.6 -0.5 0.8 999 0 0 1 \;;
#X scalar 1228-stuct-matrix -0.2 1 0.2 0.6 -0.1 0.8 999 0 0 2 \;;
#X scalar 1228-stuct-matrix 0.2 1 0.6 0.6 0.3 0.8 999 0 0 3 \;;
#X scalar 1228-stuct-matrix 0.6 1 1 0.6 0.7 0.8 999 0 0 4 \;;
#X scalar 1228-stuct-matrix -1 0.6 -0.6 0.2 -0.9 0.4 999 0 0 5 \;;
#X scalar 1228-stuct-matrix -0.6 0.6 -0.2 0.2 -0.5 0.4 999 0 0 6 \;
;
#X scalar 1228-stuct-matrix -0.2 0.6 0.2 0.2 -0.1 0.4 999 0 0 7 \;
;
#X scalar 1228-stuct-matrix 0.2 0.6 0.6 0.2 0.3 0.4 999 0 0 8 \;;
#X scalar 1228-stuct-matrix 0.6 0.6 1 0.2 0.7 0.4 999 0 0 9 \;;
#X scalar 1228-stuct-matrix -1 0.2 -0.6 -0.2 -0.9 -1.49012e-08 999
0 0 10 \;;
#X scalar 1228-stuct-matrix -0.6 0.2 -0.2 -0.2 -0.5 -1.49012e-08 999
0 0 11 \;;
#X scalar 1228-stuct-matrix -0.2 0.2 0.2 -0.2 -0.1 -1.49012e-08 999
0 0 12 \;;
#X scalar 1228-stuct-matrix 0.2 0.2 0.6 -0.2 0.3 -1.49012e-08 999 0
0 13 \;;
#X scalar 1228-stuct-matrix 0.6 0.2 1 -0.2 0.7 -1.49012e-08 999 0 0
14 \;;
#X scalar 1228-stuct-matrix -1 -0.2 -0.6 -0.6 -0.9 -0.4 999 0 0 15
\;;
#X scalar 1228-stuct-matrix -0.6 -0.2 -0.2 -0.6 -0.5 -0.4 999 0 0 16
\;;
#X scalar 1228-stuct-matrix -0.2 -0.2 0.2 -0.6 -0.1 -0.4 999 0 0 17
\;;
#X scalar 1228-stuct-matrix 0.2 -0.2 0.6 -0.6 0.3 -0.4 999 0 0 18 \;
;
#X scalar 1228-stuct-matrix 0.6 -0.2 1 -0.6 0.7 -0.4 999 0 0 19 \;
;
#X scalar 1228-stuct-matrix -1 -0.6 -0.6 -1 -0.9 -0.8 999 0 0 20 \;
;
#X scalar 1228-stuct-matrix -0.6 -0.6 -0.2 -1 -0.5 -0.8 999 0 0 21
\;;
#X scalar 1228-stuct-matrix -0.2 -0.6 0.2 -1 -0.1 -0.8 999 0 0 22 \;
;
#X scalar 1228-stuct-matrix 0.2 -0.6 0.6 -1 0.3 -0.8 999 0 0 23 \;
;
#X scalar 1228-stuct-matrix 0.6 -0.6 1 -1 0.7 -0.8 999 0 0 24 \;;
#X coords -1 1 1 -1 201 201 2 100 100;
#X restore 7 238 pd \$0-canvas;
#X msg 374 273 matrix 5 5;
#X msg 283 273 matrix 3 3;
#X msg 283 243 matrix 1 1;
#X obj 283 414 list prepend set;
#X obj 283 436 list trim;
#X obj 244 312 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 394 243 matrix 3 4;
#X text 4 129 The values of the elements of the matrix are multiplied
by 100 before being displayed to offer a better precision for interacting.
, f 66;
#X text 4 172 The syntax of the matrix is the same used by the iemmatrix
abstraction library: the symbol matrix followed by the size \, the
number of rows and the number of columns \, and the values of the elements.
, f 66;
#X obj 283 344 xel.2d.gui.mat \$0-canvas 5 5;
#X msg 343 313 matrix 2 2 0.4 0.5 1.4 1.8;
#X msg 283 460 matrix 5 5 0 0 0 0 0 0 0 0.5 0.38 0 0 0 0 0.24 0 0 0
0 0 0 0 0 0 0 0, f 38;
#X obj 476 367 unpack, f 10;
#X obj 476 389 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 533 389 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X text 477 406 Indices of the selected cell, f 16;
#X text 4 31 The abstraction displays the coefficients of a matrix
inside a canvas and allows to interact with them. The first arguments
is the name of the canvas. The two next arguments are facultative and
can be used to define the default size of the matrix \, the number
of rows and the number of columns. And two last arguments can be used
to define the range of the coefficcients \, the minimum and maximum
values., f 66;
#X text 292 366 The matrix;
#X connect 3 0 12 0;
#X connect 4 0 12 0;
#X connect 5 0 12 0;
#X connect 6 0 7 0;
#X connect 7 0 14 0;
#X connect 8 0 12 0;
#X connect 9 0 12 0;
#X connect 12 0 6 0;
#X connect 12 1 15 0;
#X connect 13 0 12 0;
#X connect 15 0 16 0;
#X connect 15 1 17 0;
