#N struct 1164-stuct-matrix float x1 float y1 float x2 float y2 float
xv float yv float c1 float c2 float val float index;
#N struct 1160-stuct-matrix float x1 float y1 float x2 float y2 float
xv float yv float c1 float c2 float val float index;
#N canvas 121 132 829 619 10;
#X obj 6 7 xel.header xel.2d.mat.brush;
#X obj 6 574 xel.footer;
#X obj 233 118 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 233 94 loadbang;
#N canvas 0 22 1029 742 \$0-canvas 0;
#X scalar 1164-stuct-matrix -1 1 -0.6 0.6 -0.9 0.8 999 0 0 0 \;;
#X scalar 1164-stuct-matrix -0.6 1 -0.2 0.6 -0.5 0.8 999 0 0 1 \;;
#X scalar 1164-stuct-matrix -0.2 1 0.2 0.6 -0.1 0.8 999 0 0 2 \;;
#X scalar 1164-stuct-matrix 0.2 1 0.6 0.6 0.3 0.8 999 0 0 3 \;;
#X scalar 1164-stuct-matrix 0.6 1 1 0.6 0.7 0.8 999 0 0 4 \;;
#X scalar 1164-stuct-matrix -1 0.6 -0.6 0.2 -0.9 0.4 999 0 0 5 \;;
#X scalar 1164-stuct-matrix -0.6 0.6 -0.2 0.2 -0.5 0.4 999 0 94 6 \;
;
#X scalar 1164-stuct-matrix -0.2 0.6 0.2 0.2 -0.1 0.4 999 0 0 7 \;
;
#X scalar 1164-stuct-matrix 0.2 0.6 0.6 0.2 0.3 0.4 999 0 0 8 \;;
#X scalar 1164-stuct-matrix 0.6 0.6 1 0.2 0.7 0.4 999 0 0 9 \;;
#X scalar 1164-stuct-matrix -1 0.2 -0.6 -0.2 -0.9 -1.49012e-08 999
0 0 10 \;;
#X scalar 1164-stuct-matrix -0.6 0.2 -0.2 -0.2 -0.5 -1.49012e-08 999
0 94 11 \;;
#X scalar 1164-stuct-matrix -0.2 0.2 0.2 -0.2 -0.1 -1.49012e-08 999
0 75 12 \;;
#X scalar 1164-stuct-matrix 0.2 0.2 0.6 -0.2 0.3 -1.49012e-08 999 0
0 13 \;;
#X scalar 1164-stuct-matrix 0.6 0.2 1 -0.2 0.7 -1.49012e-08 999 0 0
14 \;;
#X scalar 1164-stuct-matrix -1 -0.2 -0.6 -0.6 -0.9 -0.4 999 0 0 15
\;;
#X scalar 1164-stuct-matrix -0.6 -0.2 -0.2 -0.6 -0.5 -0.4 999 0 94
16 \;;
#X scalar 1164-stuct-matrix -0.2 -0.2 0.2 -0.6 -0.1 -0.4 999 0 75 17
\;;
#X scalar 1164-stuct-matrix 0.2 -0.2 0.6 -0.6 0.3 -0.4 999 0 0 18 \;
;
#X scalar 1164-stuct-matrix 0.6 -0.2 1 -0.6 0.7 -0.4 999 0 0 19 \;
;
#X scalar 1164-stuct-matrix -1 -0.6 -0.6 -1 -0.9 -0.8 999 0 0 20 \;
;
#X scalar 1164-stuct-matrix -0.6 -0.6 -0.2 -1 -0.5 -0.8 999 0 94 21
\;;
#X scalar 1164-stuct-matrix -0.2 -0.6 0.2 -1 -0.1 -0.8 999 0 75 22
\;;
#X scalar 1164-stuct-matrix 0.2 -0.6 0.6 -1 0.3 -0.8 999 0 0 23 \;
;
#X scalar 1164-stuct-matrix 0.6 -0.6 1 -1 0.7 -0.8 999 0 0 24 \;;
#X coords -1 1 1 -1 201 201 2 100 100;
#X restore 7 88 pd \$0-canvas;
#X obj 233 456 list prepend set;
#X obj 233 478 list trim;
#X msg 233 500 matrix 5 5 0 0 0 0 0 0 0.94 0 0 0 0 0.94 0.75 0 0 0
0.94 0.75 0 0 0 0.94 0.75 0 0, f 30;
#X msg 244 143 matrix 5 5;
#X text 334 138 Changes the size of the matrix, f 16;
#X text 251 119 Outputs the matrix;
#N canvas 298 125 450 300 error.generator 0;
#X obj 20 238 outlet;
#X obj 20 18 inlet;
#X obj 20 40 bang;
#X msg 27 80 matrix 0 3;
#X msg 44 139 matrix 5 5 0 0 0 1 2 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0, f 38;
#X msg 314 202 zaza;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 4 0;
#X connect 2 0 5 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X restore 75 337 pd error.generator;
#X obj 75 315 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 268 229 matrix 5 5 0.01 0.02 0.03 0.04 0.05 0.06 0.07 0.08 0.09
0.01 0.11 0.12 0.13 0.14 0.15 0.16 0.17 0.18 0.19 0.2 0.21 0.22 0.23
0.24 0.25, f 33;
#X text 267 178 Sets all the values of the matrix and resizes it if
needed, f 33;
#X text 267 208 nrows \, ncols \, coeff1 \, coeff2 \, etc.;
#X obj 247 354 r \$0-in;
#N canvas 0 22 450 300 \$0-pattern-gui 0;
#X scalar 1160-stuct-matrix -1 1 -0.333333 0.333333 -0.833333 0.666667
999 0 0 0 \;;
#X scalar 1160-stuct-matrix -0.333333 1 0.333333 0.333333 -0.166667
0.666667 999 0 94 1 \;;
#X scalar 1160-stuct-matrix 0.333333 1 1 0.333333 0.5 0.666667 999
0 0 2 \;;
#X scalar 1160-stuct-matrix -1 0.333333 -0.333333 -0.333333 -0.833333
-2.98023e-08 999 0 0 3 \;;
#X scalar 1160-stuct-matrix -0.342854 0.314288 0.333333 -0.333333 -0.166667
-2.98023e-08 999 0 0 4 \;;
#X scalar 1160-stuct-matrix 0.333333 0.333333 1 -0.333333 0.5 -2.98023e-08
999 0 75 5 \;;
#X scalar 1160-stuct-matrix -1 -0.333333 -0.333333 -1 -0.833333 -0.666667
999 0 0 6 \;;
#X scalar 1160-stuct-matrix -0.333333 -0.333333 0.333333 -1 -0.166667
-0.666667 999 0 0 7 \;;
#X scalar 1160-stuct-matrix 0.333333 -0.333333 1 -1 0.5 -0.666667 999
0 0 8 \;;
#X coords -1 1 1 -1 70 70 2 100 100;
#X restore 522 92 pd \$0-pattern-gui;
#X text 33 478 Perhaps arguments can define a default pattern, f 24
;
#X obj 524 344 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 11 256;
#X obj 557 364 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 4 256;
#X obj 591 384 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 523 213 list prepend pattern;
#X obj 523 235 list trim;
#X obj 523 193 list split 1;
#X obj 233 392 xel.2d.mat.brush 5 5;
#X obj 524 323 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 661 352 vradio 15 1 0 4 empty empty empty 0 -8 0 10 -262144
-1 -1 2;
#X obj 524 443 list prepend fill, f 20;
#X obj 523 257 s \$0-in;
#X text 4 31 The abstraction applies pattern to a matrices. The arguments
are the default size of the matrix \, the number of rows and the number
of columns., f 66;
#X obj 524 419 pack f f 1;
#X text 523 67 1 - Draw the pattern;
#X text 522 286 2 - Apply the pattern (row \, column \, factor), f
22;
#X obj 524 485 s \$0-in;
#X text 662 316 Change the mode of application, f 20;
#X obj 524 465 list trim;
#X text 680 352 fill;
#X text 680 367 replace;
#X text 680 383 add;
#X text 680 399 subtract;
#N canvas 0 22 450 300 format 0;
#X msg 60 85 fill;
#X msg 95 84 replace;
#X msg 107 111 add;
#X obj 60 63 sel 0 1 2;
#X msg 141 120 subtract;
#X obj 59 43 inlet;
#X obj 78 173 outlet;
#X connect 0 0 6 0;
#X connect 1 0 6 0;
#X connect 2 0 6 0;
#X connect 3 0 0 0;
#X connect 3 1 1 0;
#X connect 3 2 2 0;
#X connect 3 3 4 0;
#X connect 4 0 6 0;
#X restore 661 418 pd format;
#X obj 523 171 xel.2d.gui.mat \$0-pattern-gui 3 3;
#X obj 233 414 xel.2d.gui.mat \$0-canvas 5 5;
#X connect 2 0 25 0;
#X connect 3 0 2 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 25 0;
#X connect 11 0 25 0;
#X connect 12 0 11 0;
#X connect 13 0 25 0;
#X connect 16 0 25 0;
#X connect 19 0 31 0;
#X connect 20 0 31 1;
#X connect 21 0 31 2;
#X connect 22 0 23 0;
#X connect 23 0 29 0;
#X connect 24 1 22 0;
#X connect 25 0 43 0;
#X connect 26 0 19 0;
#X connect 27 0 41 0;
#X connect 28 0 36 0;
#X connect 31 0 28 0;
#X connect 36 0 34 0;
#X connect 41 0 28 1;
#X connect 42 0 24 0;
#X connect 43 0 5 0;
